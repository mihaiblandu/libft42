        -:    0:Source:/home/mihai/libft/put/ft_itoa.c
        -:    0:Graph:/home/mihai/libft/cmake-build-debug-coverage/CMakeFiles/libft.dir/put/ft_itoa.c.gcno
        -:    0:Data:/home/mihai/libft/cmake-build-debug-coverage/CMakeFiles/libft.dir/put/ft_itoa.c.gcda
        -:    0:Runs:1
        -:    1:/* ************************************************************************** */
        -:    2:/*                                                                            */
        -:    3:/*                                                        :::      ::::::::   */
        -:    4:/*   ft_itoa.c                                          :+:      :+:    :+:   */
        -:    5:/*                                                    +:+ +:+         +:+     */
        -:    6:/*   By: mihai <mihai@student.42.fr>                +#+  +:+       +#+        */
        -:    7:/*                                                +#+#+#+#+#+   +#+           */
        -:    8:/*   Created: 2020/11/23 11:49:30 by mihai             #+#    #+#             */
        -:    9:/*   Updated: 2020/11/23 14:41:39 by mihai            ###   ########.fr       */
        -:   10:/*                                                                            */
        -:   11:/* ************************************************************************** */
        -:   12:
        -:   13:#include  "../libft.h"
        -:   14:
        1:   15:char*       ft_itoa(int n)
        -:   16:{
        -:   17:    char    *s;
        -:   18:    int     i;
        -:   19:    int     tmp;
        -:   20:    char    c;
        -:   21:
        1:   22:    if(n == 0)
        1:   22-block  0
        -:   23:    {
    #####:   24:        s = ft_strnew(1);
    %%%%%:   24-block  0
    #####:   25:        s[0] = '0';
    #####:   26:        return (s);
        -:   27:    }
        1:   28:    s = ft_strnew(11);
        1:   28-block  0
        1:   29:    i = 0;
       1*:   30:    c = (n < 0) ? '-' : '+';
    %%%%%:   30-block  0
        1:   30-block  1
        2:   31:    while (n != 0)
        1:   31-block  0
        2:   31-block  1
        -:   32:    {
        1:   33:       tmp = n % 10;
        1:   34:       n /= 10;
        1:   35:       tmp = tmp <= 0 ? (-1 * tmp) : (tmp);
        1:   36:       s[i++] = tmp + '0';
        1:   36-block  0
        -:   37:    }
        1:   38:    if(c == '-')
        1:   38-block  0
    #####:   39:        s[i] = '-';
    %%%%%:   39-block  0
        1:   40:    ft_strrev(s);
        1:   40-block  0
        1:   41:    ft_strtrimr(s);
        1:   42:    return (s);
        -:   43:}
